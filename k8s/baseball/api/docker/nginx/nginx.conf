user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    # 各ワーカーが同時に処理できる接続数を設定します
    worker_connections  1024;
}

http {
    charset  UTF-8;

    # MIMEタイプを含む外部ファイルをインクルード
    include       mime.types;
    default_type  application/octet-stream;


    # ログの設定
    log_format main escape=json
    '{'
        '"request_id": "$request_id",'
        '"method": "$request_method",'
        '"status": "$status",'
        '"forwarded_for": "$http_x_forwarded_for",'
        '"host": "$host",'
        '"url": "$request_uri",'
        '"referer": "$http_referer",'
        '"remote_ip": "$remote_addr",'
        '"server_ip": "$server_addr",'
        '"user_agent": "$http_user_agent",'
        '"occurred_at": "$time_iso8601"'
    '}';


    # 静的ファイルの送信を効率化するためのsendfileを有効
    sendfile        on;

    # keep-alive接続のタイムアウト
    keepalive_timeout  65;

    server {
        listen 80;
        server_name localhost;

        access_log  /var/log/nginx/access.json  main;

        real_ip_header     X-Forwarded-For;
        real_ip_recursive  on;

        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "content-type, access-control-allow-headers, access-control-allow-origin, Host, Referer, User-Agent";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }

            proxy_pass        http://localhost:8082/;
            proxy_set_header  Host $http_host;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Request-ID $request_id;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect    off;
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Headers "content-type, access-control-allow-headers, access-control-allow-origin, Host, Referer, User-Agent" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        }
    }
}